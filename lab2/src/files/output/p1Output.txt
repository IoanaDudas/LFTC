Token START on position: -1
Token int on position: -1
Token a on position: 47
Token , on position: -1
Token b on position: 48
Token , on position: -1
Token c on position: 49
Token , on position: -1
Token max on position: 26
Token ; on position: -1
Token read on position: -1
Token ( on position: -1
Token a on position: 47
Token ) on position: -1
Token ; on position: -1
Token read on position: -1
Token ( on position: -1
Token b on position: 48
Token ) on position: -1
Token ; on position: -1
Token read on position: -1
Token ( on position: -1
Token c on position: 49
Token ) on position: -1
Token ; on position: -1
Token if on position: -1
Token ( on position: -1
Token a on position: 47
Token >= on position: -1
Token b on position: 48
Token && on position: -1
Token a on position: 47
Token >= on position: -1
Token c on position: 49
Token ) on position: -1
Token { on position: -1
Token max on position: 26
Token = on position: -1
Token a on position: 47
Token ; on position: -1
Token } on position: -1
Token else on position: -1
Token { on position: -1
Token if on position: -1
Token ( on position: -1
Token b on position: 48
Token >= on position: -1
Token a on position: 47
Token && on position: -1
Token b on position: 48
Token >= on position: -1
Token c on position: 49
Token ) on position: -1
Token { on position: -1
Token max on position: 26
Token = on position: -1
Token b on position: 48
Token ; on position: -1
Token } on position: -1
Token else on position: -1
Token { on position: -1
Token max on position: 26
Token = on position: -1
Token c on position: 49
Token ; on position: -1
Token } on position: -1
Token } on position: -1
Token write on position: -1
Token ( on position: -1
Token max on position: 26
Token ) on position: -1
Token ; on position: -1
Token write on position: -1
Token ( on position: -1
Token "test" on position: -1
Token ) on position: -1
Token ; on position: -1
Token END on position: -1
